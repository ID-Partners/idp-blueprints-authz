services:
  redis-stack:
    image: redis/redis-stack:latest
    container_name: redis-stack
    ports:
      - "6379:6379"   # Redis default port
      - "8001:8001"   # Redis Stack API port (for RedisInsight and other tools)
    environment:
      - REDIS_ARGS=--requirepass mypassword  # Set Redis password
    networks:
      - internal-network
    volumes:
      - ./redis-data:/data  # Persist Redis data

  go-app:
    build:
      context: ./api
      dockerfile: Dockerfile
    container_name: go-app
    ports:
      - "8081:8081"  # Map the application's port
    networks:
      - internal-network
    depends_on:
      - redis-stack
      - postgres

  ping-authorize-pap:
    image: pingidentity/pingauthorizepap:edge
    container_name: authzen-pap
    ports:
      - "7443:1443"
    environment:
     - PING_EXTERNAL_BASE_URL=localhost:7443
     - REST_API_HOSTNAME=localhost:7443
     - LICENSE_DIR=/config
     - PING_IDENTITY_ACCEPT_EULA=YES
     - LICENSE_FILE_NAME=pingauthorize.lic
     - TAIL_LOG_FILES=/logs/access.log
     - DECISION_POINT_SHARED_SECRET=2FederateM0re
    #  - PING_CLIENT_ID=ac_client
    #  - PING_OIDC_CONFIGURATION_ENDPOINT=https://localhost:9031/.well-known/openid-configuration
    #  - PING_SCOPE=oidc email profile phone
    #  - ADDITIONAL_SETUP_ARGS="--enableSelfGovernance"
    #  - PING_OIDC_TLS_VALIDATION=NONE

    volumes:
      - ./config:/config
    networks:
      - external-network
      - internal-network

  ping-authorize:
    image: pingidentity/pingauthorize:edge
    container_name: authZEN-pdp
    volumes:
      - /run/secrets                          # Mount tmpfs directory for secrets
      - ./option-cache:/opt/logs/option-cache # Mount option-cache directory
      - ./config:/config
      - ./config/pd.profile:/opt/staging/pd.profile
      - ./webapps/console.war:/opt/in/instance/webapps/console.war
    tmpfs:
      - /run/secrets:rw,nosuid,nodev,noexec,mode=0777  # Set tmpfs with write permissions
    ports:
      - "1389:1389"
      - "1636:1636"                          # Map the LDAP port
      - "8443:1443"                          # Map the HTTPS port
    environment:
      - LICENSE_DIR=/config
      - INSTANCE_ID=sd1-task1
      - PING_IDENTITY_ACCEPT_EULA=YES
      - LICENSE_FILE_NAME=pingauthorize.lic
      - PING_INSTANCE_NAME=authZEN
      - JSON_API_HEADER_NAME=client
      - PDP_SHARED_SECRET=password123
      - POLICY_NODE_ID=6ae6edd5-0283-4ec8-ac84-08df56df1f63
      - DEPLOYMENT_PACKAGE</opt/staging/pd.profile/Deployment-Package-cf45b188-2d1c-4bde-ab37-6c3dab34ab80.deploymentpackage
      - POLICY_BRANCH=AuthZen
    networks:
      - external-network
      - internal-network

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      POSTGRES_USER: kong
      POSTGRES_DB: kong
      POSTGRES_PASSWORD: kong
    ports:
      - "5432:5432"
    volumes:
      - kong-db-data:/var/lib/postgresql/data
    networks:
      - internal-network

  kong:
    image: kong-custom:latest
    restart: always
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: postgres
      KONG_PG_PASSWORD: kong
      KONG_LOG_LEVEL: debug
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_PLUGINS: bundled,ping-auth
    ports:
      - "8000:8000"  # Proxy
      - "9443:8443"  # Proxy SSL
      - "8002:8001"  # Admin
      - "8444:8444"  # Admin SSL
    depends_on:
      - postgres
    networks:
      - external-network
      - internal-network


volumes:
  kong-db-data:
    
networks:
  internal-network:
    driver: bridge # Internal services will communicate here
  external-network:
    driver: bridge # Only mtls is exposed externally
